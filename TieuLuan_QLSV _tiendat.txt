#include <stdio.h>
#include <string.h>
#include <ctype.h>

struct SinhVien {
    char masv[10];
    char hoten[50];
    char lop[20];
    float diem;
};

//  In danh sách sinh viên 
void inds(struct SinhVien ds[], int n) {
    printf("%-10s %-25s %-10s %-10s\n", "MaSV", "Ho Ten", "Lop", "Diem");
    for (int i = 0; i < n; i++) {
        printf("%-10s %-25s %-10s %-10.2f\n",
               ds[i].masv, ds[i].hoten, ds[i].lop, ds[i].diem);
    }
}

//  Tìm kiếm theo mã SV 
int timkiemTheoMa(struct SinhVien ds[], int n, char ma[]) {
    for (int i = 0; i < n; i++) {
        if (strcmp(ds[i].masv, ma) == 0) {
            return i; // Trả về vị trí tìm thấy
        }
    }
    return -1; // Không tìm thấy
}

// Hàm đổi chuỗi sang chữ thường (để so sánh không phân biệt hoa/thường) 
void toLowerCase(char s[]) {
    for (int i = 0; s[i]; i++) {
        s[i] = tolower(s[i]);
    }
}

//  Tìm kiếm theo tên (không phân biệt hoa/thường)
int timkiemTheoTen(struct SinhVien ds[], int n, char ten[]) {
    char tempTen[50], tempHoten[50];

    strcpy(tempTen, ten);
    toLowerCase(tempTen);

    for (int i = 0; i < n; i++) {
        strcpy(tempHoten, ds[i].hoten);
        toLowerCase(tempHoten);

        if (strstr(tempHoten, tempTen) != NULL) { 
            // strstr() trả về con trỏ nếu tìm thấy
            return i;
        }
    }
    return -1;
}

//  Cập nhật thông tin sinh viên theo mã 
void capnhatsv(struct SinhVien ds[], int n) {
    char ma[10];
    printf("Nhap ma SV can cap nhat: ");
    fflush(stdin);
    fgets(ma, sizeof(ma), stdin);
    ma[strcspn(ma, "\n")] = 0; // xóa ký tự xuống dòng

    int vitri = timkiemTheoMa(ds, n, ma);
    if (vitri == -1) {
        printf("Khong tim thay sinh vien co ma %s\n", ma);
        return;
    }

    printf("Nhap ten moi: ");
    fflush(stdin);
    fgets(ds[vitri].hoten, sizeof(ds[vitri].hoten), stdin);
    ds[vitri].hoten[strcspn(ds[vitri].hoten, "\n")] = 0;

    printf("Nhap lop moi: ");
    fflush(stdin);
    fgets(ds[vitri].lop, sizeof(ds[vitri].lop), stdin);
    ds[vitri].lop[strcspn(ds[vitri].lop, "\n")] = 0;

    printf("Nhap diem moi: ");
    scanf("%f", &ds[vitri].diem);

    printf("==> Da cap nhat thong tin sinh vien!\n");
}

// Hàm main 
int main() {
    struct SinhVien ds[100] = {
        {"SVTHUNHAT", "LE TIEN DAT", "KHMT20A", 7.0},
        {"SVTHUHAI", "LE TUAN ANH", "KHMT20A", 8.0},
        {"SVTHUBA", "HA TRONG TRUNG", "KHMT20B", 7.5}
    };
    int n = 3;

    printf(" DANH SACH BAN DAU \n");
    inds(ds, n);

    // Tìm theo mã 
    char ma[10];
    printf("\nNhap ma SV can tim: ");
    fflush(stdin);
    fgets(ma, sizeof(ma), stdin);
    ma[strcspn(ma, "\n")] = 0;

    int pos = timkiemTheoMa(ds, n, ma);
    if (pos != -1) {
        printf("Tim thay: %s - %s - %s - %.2f\n",ds[pos].masv, ds[pos].hoten, ds[pos].lop, ds[pos].diem);
    } else {
        printf("Khong tim thay sinh vien co ma %s\n", ma);
    }

    //  Tìm theo tên 
    char ten[50];
    printf("\nNhap ten SV can tim: ");
    fflush(stdin);
    fgets(ten, sizeof(ten), stdin);
    ten[strcspn(ten, "\n")] = 0;

    pos = timkiemTheoTen(ds, n, ten);
    if (pos != -1) {
        printf("Tim thay: %s - %s - %s - %.2f\n",
               ds[pos].masv, ds[pos].hoten, ds[pos].lop, ds[pos].diem);
    } else {
        printf("Khong tim thay sinh vien co ten %s\n", ten);
    }

    //  Cập nhật thông tin
    capnhatsv(ds, n);

    printf("\n DANH SACH SAU KHI CAP NHAT \n");
    inds(ds, n);

    return 0;
}
